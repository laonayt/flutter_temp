name: Android CI Build

on:
  push:
    tags:
      - '*' # 当push标签时触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up output
        id: vars
        run: |
          echo "short_ref=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        
      - name: Build App
        run: |
          chmod +x gradlew
          ./gradlew app:assembleRelease --stacktrace
          
      - name: Verify APK exists
        id: verify_apk
        run: |
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            echo "APK exists"
            echo "apk_path=app/build/outputs/apk/release/app-release.apk" >> $GITHUB_OUTPUT
          else
            echo "APK does not exist"
            exit 1
          fi
          
      - name: Create Github Release
        if: github.repository == 'dora4/DoraCacheSample'
        uses: taiki-e/create-gh-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'dora4/DoraCacheSample'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          files: ${{ steps.verify_apk.outputs.apk_path }}
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          body: |
            Android release for version ${{ steps.vars.outputs.tag }}
            Contains APK build
